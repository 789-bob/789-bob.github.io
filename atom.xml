<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>叶双全的博客</title>
  <icon>https://www.gravatar.com/avatar/aa8c521f61c2af067b19490204dcc12c</icon>
  <subtitle>喜欢技术,喜欢摄影</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//theone.org.cn/"/>
  <updated>2019-09-06T19:23:41.478Z</updated>
  <id>//theone.org.cn/</id>
  
  <author>
    <name>叶双全</name>
    <email>2426303361@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Github实现相册功能</title>
    <link href="//theone.org.cn/2019/09/06/2019-09-06-Hexo+Github%E5%AE%9E%E7%8E%B0%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD/"/>
    <id>//theone.org.cn/2019/09/06/2019-09-06-Hexo+Github实现相册功能/</id>
    <published>2019-09-06T11:10:59.000Z</published>
    <updated>2019-09-06T19:23:41.478Z</updated>
    
    <content type="html"><![CDATA[<ul><li>最终效果请看这里：<a href="http://theone.org.cn/photos/" target="_blank" rel="noopener">http://theone.org.cn/photos/</a> </li></ul><h3 id="一-说明"><a href="#一-说明" class="headerlink" title="一.说明"></a>一.说明</h3><p><strong>1.关于</strong></p><ul><li>我使用的主题是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a>，其中<code>instagram</code>被禁了,下面用自己的方式实现了相册功能</li></ul><p><strong>2.方案</strong></p><ul><li>在<code>github</code>上<strong>新建一个仓库</strong>，主要用于存储图片，可以通过<code>url</code>访问到，也方便管理</li><li>将要放到相册的图片处理成<code>json</code>格式的数据，然后进行访问，这里<code>json</code>的格式需要配合要使用的样式，所以需要处理成<strong>特定格式</strong>的<code>json</code>数据，下面会给出</li><li><strong>图片裁剪</strong>，因为相册显示的样式最好是<strong>正方形</strong>的的图片，这里使用脚本处理一下</li><li><strong>图片压缩</strong>，相册显示的图片是压缩后的图片，提高加载的速度，打开后的图片是原图。</li></ul><h3 id="二-实现"><a href="#二-实现" class="headerlink" title="二.实现"></a>二.实现</h3><p><strong>1.GitHub操作</strong></p><blockquote><p>建立一个用于存储相册的仓库，我这里建立了名为<code>Blog-Back-Up</code>的仓库</p></blockquote><p><strong>2.博客操作</strong></p><ul><li><p>在<strong>博客</strong>的<code>source</code>文件夹下建立一个<code>photos</code>文件夹</p></li><li><p>将样式文件放到<code>photos</code>文件夹下，样式文件我都放到了<code>github</code>上：</p><p><a href="https://github.com/789-bob/Blog-Back-Up/tree/master/blog_photos_copy" target="_blank" rel="noopener">https://github.com/789-bob/Blog-Back-Up/tree/master/blog_photos_copy</a> </p></li><li><p>修改<code>ins.js</code>文件，主要是里面的<code>render</code>函数</p></li><li><p>其中的<code>url</code>对应到你的<code>github</code>放图片的地址 </p></li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> render = function render(res) &#123;</span><br><span class="line">      <span class="keyword">var</span> ulTmpl = <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len2 = res.list.length; j &lt; len2; j++) &#123;</span><br><span class="line">        <span class="keyword">var</span> data = res.list[j].arr;</span><br><span class="line">        <span class="keyword">var</span> liTmpl = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = data.link.length; i &lt; len; i++) &#123;</span><br><span class="line">          <span class="keyword">var</span> minSrc = <span class="symbol">'https</span>:<span class="comment">//raw.githubusercontent.com/789-bob/Blog-Back-Up/master/min_photos/' + data.link[i];</span></span><br><span class="line">          <span class="keyword">var</span> src = <span class="symbol">'https</span>:<span class="comment">//raw.githubusercontent.com/789-bob/Blog-Back-Up/master/photos/' + data.link[i];</span></span><br><span class="line">          <span class="keyword">var</span> <span class="class"><span class="keyword">type</span> </span>= data.<span class="keyword">type</span>[i];</span><br><span class="line">          <span class="keyword">var</span> target = src + (<span class="class"><span class="keyword">type</span> <span class="title">===</span> '<span class="title">video</span>' <span class="title">?</span> '.<span class="title">mp4</span>' </span>: '.jpg');</span><br><span class="line">          src += '';</span><br><span class="line"></span><br><span class="line">          liTmpl += '&lt;figure <span class="class"><span class="keyword">class</span></span>=<span class="string">"thumb"</span> itemprop=<span class="string">"associatedMedia"</span> itemscope=<span class="string">""</span> itemtype=<span class="string">"http://schema.org/ImageObject"</span>&gt;\</span><br><span class="line">                &lt;a href=<span class="string">"' + src + '"</span> itemprop=<span class="string">"contentUrl"</span> data-size=<span class="string">"1080x1080"</span> data-<span class="class"><span class="keyword">type</span></span>=<span class="string">"' + type + '"</span> data-target=<span class="string">"' + src + '"</span>&gt;\</span><br><span class="line">                  &lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"reward-img"</span> data-<span class="class"><span class="keyword">type</span></span>=<span class="string">"' + type + '"</span> data-src=<span class="string">"' + minSrc + '"</span> src=<span class="string">"/assets/img/empty.png"</span> itemprop=<span class="string">"thumbnail"</span> onload=<span class="string">"lzld(this)"</span>&gt;\</span><br><span class="line">                &lt;/a&gt;\</span><br><span class="line">                &lt;figcaption style=<span class="string">"display:none"</span> itemprop=<span class="string">"caption description"</span>&gt;' + data.text[i] + '&lt;/figcaption&gt;\</span><br><span class="line">            &lt;/figure&gt;';</span><br><span class="line">        &#125;</span><br><span class="line">        ulTmpl = ulTmpl + '&lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"archives album"</span>&gt;&lt;h1 <span class="class"><span class="keyword">class</span></span>=<span class="string">"year"</span>&gt;' + data.year + '年&lt;em&gt;' + data.month + '月&lt;/em&gt;&lt;/h1&gt;\</span><br><span class="line">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-box-ul"</span>&gt;' + liTmpl + '&lt;/ul&gt;\</span><br><span class="line">        &lt;/section&gt;';</span><br><span class="line">      &#125;</span><br><span class="line">      document.querySelector('.instagram').innerHTML = '&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"photos"</span> itemscope=<span class="string">""</span> itemtype=<span class="string">"http://schema.org/ImageGallery"</span>&gt;' + ulTmpl + '&lt;/div&gt;';</span><br><span class="line">      createVideoIncon();</span><br><span class="line">      _view2.<span class="keyword">default</span>.init();</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p><strong>3.图片处理</strong></p><ul><li>我的博客相关文件: <a href="https://github.com/789-bob/Blog-Back-Up" target="_blank" rel="noopener">https://github.com/789-bob/Blog-Back-Up</a> </li></ul><p><strong>(1)裁剪图片</strong></p><ul><li>去图片的中间部分，裁剪为<strong>正方形</strong></li><li>对应的裁剪函数</li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">def cut_by_ratio(self):  </span><br><span class="line">    <span class="string">""</span><span class="string">"按照图片长宽进行分割</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    ------------</span></span><br><span class="line"><span class="string">    取中间的部分，裁剪成正方形</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span>  </span><br><span class="line">    im = Image.open(self.infile)  </span><br><span class="line">    (<span class="keyword">x</span>, <span class="keyword">y</span>) = im.size  </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">x</span> &gt; <span class="keyword">y</span>:  </span><br><span class="line">        region = (<span class="keyword">int</span>(<span class="keyword">x</span>/<span class="number">2</span>-<span class="regexp">y/2), 0, int(x/2+y/</span><span class="number">2</span>), <span class="keyword">y</span>)  </span><br><span class="line">        <span class="comment">#裁切图片  </span></span><br><span class="line">        crop_img = im.crop(region)  </span><br><span class="line">        <span class="comment">#保存裁切后的图片  </span></span><br><span class="line">        crop_img.save(self.outfile)             </span><br><span class="line">    elif <span class="keyword">x</span> &lt; <span class="keyword">y</span>:  </span><br><span class="line">        region = (<span class="number">0</span>, <span class="keyword">int</span>(<span class="regexp">y/2-x/2), x, int(y/</span><span class="number">2</span>+<span class="keyword">x</span>/<span class="number">2</span>))</span><br><span class="line">        <span class="comment">#裁切图片  </span></span><br><span class="line">        crop_img = im.crop(region)  </span><br><span class="line">        <span class="comment">#保存裁切后的图片  </span></span><br><span class="line">        crop_img.save(self.outfile)</span><br></pre></td></tr></table></figure><p><strong>(2)压缩图片</strong></p><ul><li>把图片进行压缩，方便相册的加载 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compress</span><span class="params">(choose, des_dir, src_dir, file_list)</span>:</span></span><br><span class="line">    <span class="string">"""压缩算法，img.thumbnail对图片进行压缩，</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    参数</span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    choose: str</span></span><br><span class="line"><span class="string">            选择压缩的比例，有4个选项，越大压缩后的图片越小</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'1'</span>:</span><br><span class="line">        scale = SIZE_normal</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'2'</span>:</span><br><span class="line">        scale = SIZE_small</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'3'</span>:</span><br><span class="line">        scale = SIZE_more_small</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'4'</span>:</span><br><span class="line">        scale = SIZE_more_small_small</span><br><span class="line">    <span class="keyword">for</span> infile <span class="keyword">in</span> file_list:</span><br><span class="line">        img = Image.open(src_dir+infile)</span><br><span class="line">        <span class="comment"># size_of_file = os.path.getsize(infile)</span></span><br><span class="line">        w, h = img.size</span><br><span class="line">        img.thumbnail((int(w/scale), int(h/scale)))</span><br><span class="line">        img.save(des_dir + infile)</span><br></pre></td></tr></table></figure><p><strong>4.GitHub提交</strong></p><p><strong>5.json数据处理</strong></p><ul><li>实现代码:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_photo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''根据图片的文件名处理成需要的json格式的数据</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    最后将data.json文件存到博客的source/photos文件夹下</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    src_dir, des_dir = <span class="string">"photos/"</span>, <span class="string">"min_photos/"</span></span><br><span class="line">    file_list = list_img_file(src_dir)</span><br><span class="line">    list_info = []</span><br><span class="line">    file_list.sort(key=<span class="keyword">lambda</span> x: x.split(<span class="string">'_'</span>)[<span class="number">0</span>])   <span class="comment"># 按照日期排序</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(file_list)):</span><br><span class="line">        filename = file_list[i]</span><br><span class="line">        date_str, info = filename.split(<span class="string">"_"</span>)</span><br><span class="line">        info, _ = info.split(<span class="string">"."</span>)</span><br><span class="line">        date = datetime.strptime(date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">        year_month = date_str[<span class="number">0</span>:<span class="number">7</span>]            </span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:  <span class="comment"># 处理第一个文件</span></span><br><span class="line">            new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                                   <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                                   <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                                   <span class="string">'text'</span>: [info],</span><br><span class="line">                                                                   <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                                   &#125;</span><br><span class="line">                                        &#125; </span><br><span class="line">            list_info.append(new_dict)</span><br><span class="line">        <span class="keyword">elif</span> year_month != list_info[<span class="number">-1</span>][<span class="string">'date'</span>]:  <span class="comment"># 不是最后的一个日期，就新建一个dict</span></span><br><span class="line">            new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                   <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                   <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                   <span class="string">'text'</span>: [info],</span><br><span class="line">                                                   <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                   &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">            list_info.append(new_dict)</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 同一个日期</span></span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'link'</span>].append(filename)</span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'text'</span>].append(info)</span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'type'</span>].append(<span class="string">'image'</span>)</span><br><span class="line">    list_info.reverse()  <span class="comment"># 翻转</span></span><br><span class="line">    final_dict = &#123;<span class="string">"list"</span>: list_info&#125;</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"D:/blog/source/photos/data.json"</span>,<span class="string">"w"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        json.dump(final_dict, fp)</span><br></pre></td></tr></table></figure><ul><li>每次图片有改动都需要执行此脚本文件 </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;最终效果请看这里：&lt;a href=&quot;http://theone.org.cn/photos/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://theone.org.cn/photos/&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=
      
    
    </summary>
    
    
      <category term="hexo" scheme="//theone.org.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github搭建自己的博客</title>
    <link href="//theone.org.cn/2019/09/05/2019-09-05-Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>//theone.org.cn/2019/09/05/2019-09-05-Hexo+Github搭建自己的博客/</id>
    <published>2019-09-05T10:20:29.000Z</published>
    <updated>2019-09-06T18:29:33.332Z</updated>
    
    <content type="html"><![CDATA[<ul><li>最终效果可以查看：<a href="http://theone.org.cn/" target="_blank" rel="noopener">http://theone.org.cn/</a></li></ul><h3 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h3><ul><li>安装<code>NodeJS</code>: <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a><ul><li>需要配置环境变量</li></ul></li><li>安装<code>git</code>工具: <a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">https://git-for-windows.github.io/</a><ul><li>注册<code>github</code>账号</li><li>配置<code>SSH-key</code></li><li>创建名为<code>userName.github.io</code>的仓库,<code>userName</code>是你申请的用户名<a id="more"></a> </li></ul></li></ul><h3 id="二-安装Hexo和基本使用"><a href="#二-安装Hexo和基本使用" class="headerlink" title="二.安装Hexo和基本使用"></a>二.安装Hexo和基本使用</h3><ul><li>安装<strong>Hexo</strong>: <code>npm install -g hexo</code> </li><li>初始化<strong>Hexo</strong>: <code>hexo init</code> </li><li>生成静态页面：<code>hexo generate</code> 或者 <code>hexo g</code> </li><li>启动服务器：<code>hexo server</code> 或者 <code>hexo s</code> </li><li>浏览器中访问：<code>http://localhost:4000</code> </li></ul><h3 id="三-更换主题Theme及基本配置"><a href="#三-更换主题Theme及基本配置" class="headerlink" title="三.更换主题Theme及基本配置"></a>三.更换主题Theme及基本配置</h3><p><strong>1.更换主题</strong></p><ul><li>默认主题是<code>landscape</code>，在<code>themes</code>文件夹下，可以使用别人开发好的主题，<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">这里</a>有很多，我使用的是这一个: <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia</a></li><li>下载之后放到<code>themes</code>文件夹下即可：<code>git clone git@github.com:litten/hexo-theme-yilia.git</code> </li></ul><p><strong>2.主题基本配置</strong></p><ul><li>配置在<code>_config.yml</code>文件中</li></ul><p><strong>(1) 图片的位置</strong></p><ul><li>比如<strong>打赏</strong>的支付宝二维码图片，是在<strong>当前博客</strong>的<code>source/assets/img/</code>下 </li></ul><p><img src="/assets/blogImg/img.jpg" alt> </p><ul><li>配置:</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 打赏基础设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line">reward_type: <span class="number">1</span></span><br><span class="line"><span class="meta"># 打赏wording</span></span><br><span class="line">reward_wording: <span class="string">'谢谢你请我吃糖果'</span></span><br><span class="line"><span class="meta"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class="line">alipay: /assets/img/alipay.jpg</span><br><span class="line"><span class="meta"># 微信二维码图片地址</span></span><br><span class="line">weixin: /assets/img/weixin.png</span><br></pre></td></tr></table></figure><p><strong>(2) 百度统计</strong></p><ul><li>申请账号：<a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="noopener">https://tongji.baidu.com/web/welcome/login</a> </li><li>在<strong>代码获取</strong>的地方只要填入<strong>key</strong>即可 </li></ul><p><img src="/assets/blogImg/baidutongji.png" alt> </p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Miscellaneous</span></span><br><span class="line">baidu_analytics: <span class="string">'454d1a5ba8ed29xxxxxxxx'</span></span><br></pre></td></tr></table></figure><p><strong>(3) 评论设置</strong></p><ul><li>我用的是畅言,下面我会给出配置方法</li><li>注册畅言 <a href="https://changyan.kuaizhan.com/" target="_blank" rel="noopener">https://changyan.kuaizhan.com/</a>  </li><li>记录云评论密钥,然后修改主题下的<code>.config.yml</code>文件 </li></ul><p><img src="/assets/blogImg/changyan.png" alt></p><h3 id="四-博客的基本设置"><a href="#四-博客的基本设置" class="headerlink" title="四. 博客的基本设置"></a>四. 博客的基本设置</h3><p><strong>1.基本部署</strong></p><ul><li>配置到<code>github</code>对应的仓库中 <ul><li>使用<code>hexo deploy</code>或<code>hexo d</code>命令即可发布到github仓库中 </li><li>浏览器输入网址<code>https://userName.github.io</code>即可访问（<code>userName</code>对应你的用户名） </li></ul></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:<span class="number">789</span>-bob/<span class="number">789</span>-bob.github.io.git</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p><strong>2.主题设置</strong></p><ul><li>设置为你下载的主题：<code>theme: yilia</code> </li></ul><p><strong>3.其他</strong></p><ul><li>加入如下配置 </li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line"><span class="attr">  meta:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  pages:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  posts:</span></span><br><span class="line"><span class="attr">    title:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    date:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    path:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    raw:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    content:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    slug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    updated:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    permalink:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    excerpt:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    categories:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    tags:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="五-网站访问量显示"><a href="#五-网站访问量显示" class="headerlink" title="五. 网站访问量显示"></a>五. 网站访问量显示</h3><ul><li>我使用了<strong>不蒜子</strong>第三方的统计插件，网址： <a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">http://busuanzi.ibruce.info/</a> </li><li>在<code>themes\yilia\layout\_partial</code>下的<code>footer.ejs</code>中加入如下代码即可 </li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">总访客数<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>人次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="六-绑定申请的域名"><a href="#六-绑定申请的域名" class="headerlink" title="六.绑定申请的域名"></a>六.绑定申请的域名</h3><ul><li>可以绑定到自己申请的域名上，不用使用<code>userName.github.io</code>访问了，直接使用自己的域名访问 </li></ul><p><strong>1.申请域名</strong></p><ul><li>我在万网购买的域名，地址：<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">https://wanwang.aliyun.com/</a></li><li>我这里是<code>.cn</code>结尾的域名，一年<code>39</code>大洋</li></ul><p><strong>2.解析域名</strong></p><p><img src="/assets/blogImg/yuming.png" alt></p><p><strong>3.配置一下</strong></p><ul><li>在<strong>博客</strong>的<code>source</code>文件夹下建立一个<code>CNAME</code>的文件</li><li>内容写入你的域名信息，比如我这里是<code>theone.org.cn</code></li><li>发布到<code>github</code>即可</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;最终效果可以查看：&lt;a href=&quot;http://theone.org.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://theone.org.cn/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;安装&lt;code&gt;NodeJS&lt;/code&gt;: &lt;a href=&quot;http://nodejs.cn/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://nodejs.cn/download/&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;需要配置环境变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安装&lt;code&gt;git&lt;/code&gt;工具: &lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git-for-windows.github.io/&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;注册&lt;code&gt;github&lt;/code&gt;账号&lt;/li&gt;
&lt;li&gt;配置&lt;code&gt;SSH-key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建名为&lt;code&gt;userName.github.io&lt;/code&gt;的仓库,&lt;code&gt;userName&lt;/code&gt;是你申请的用户名
    
    </summary>
    
    
      <category term="hexo" scheme="//theone.org.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
