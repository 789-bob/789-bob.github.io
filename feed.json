{"title":"叶双全的博客","description":"湖北经济学院(2016级本科)，熟悉Java后端,希望有类似的岗位。此为博客一枚。","language":"","link":"//theone.org.cn","pubDate":"Fri, 06 Sep 2019 11:10:59 GMT","lastBuildDate":"Fri, 06 Sep 2019 19:24:09 GMT","generator":"hexo-generator-json-feed","webMaster":"叶双全","items":[{"title":"Hexo+Github实现相册功能","link":"//theone.org.cn/2019/09/06/2019-09-06-Hexo+Github实现相册功能/","description":"最终效果请看这里：http://theone.org.cn/photos/ 一.说明1.关于 我使用的主题是hexo-theme-yilia，其中instagram被禁了,下面用自己的方式实现了相册功能 2.方案 在github上新建一个仓库，主要用于存储图片，可以通过url访问到，也方便管理 将要放到相册的图片处理成json格式的数据，然后进行访问，这里json的格式需要配合要使用的样式，所以需要处理成特定格式的json数据，下面会给出 图片裁剪，因为相册显示的样式最好是正方形的的图片，这里使用脚本处理一下 图片压缩，相册显示的图片是压缩后的图片，提高加载的速度，打开后的图片是原图。 二.实现1.GitHub操作 建立一个用于存储相册的仓库，我这里建立了名为Blog-Back-Up的仓库 2.博客操作 在博客的source文件夹下建立一个photos文件夹 将样式文件放到photos文件夹下，样式文件我都放到了github上： https://github.com/789-bob/Blog-Back-Up/tree/master/blog_photos_copy 修改ins.js文件，主要是里面的render函数 其中的url对应到你的github放图片的地址 123456789101112131415161718192021222324252627var render = function render(res) &#123; var ulTmpl = \"\"; for (var j = 0, len2 = res.list.length; j &lt; len2; j++) &#123; var data = res.list[j].arr; var liTmpl = \"\"; for (var i = 0, len = data.link.length; i &lt; len; i++) &#123; var minSrc = 'https://raw.githubusercontent.com/789-bob/Blog-Back-Up/master/min_photos/' + data.link[i]; var src = 'https://raw.githubusercontent.com/789-bob/Blog-Back-Up/master/photos/' + data.link[i]; var type = data.type[i]; var target = src + (type === 'video' ? '.mp4' : '.jpg'); src += ''; liTmpl += '&lt;figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"&gt;\\ &lt;a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"1080x1080\" data-type=\"' + type + '\" data-target=\"' + src + '\"&gt;\\ &lt;img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\"&gt;\\ &lt;/a&gt;\\ &lt;figcaption style=\"display:none\" itemprop=\"caption description\"&gt;' + data.text[i] + '&lt;/figcaption&gt;\\ &lt;/figure&gt;'; &#125; ulTmpl = ulTmpl + '&lt;section class=\"archives album\"&gt;&lt;h1 class=\"year\"&gt;' + data.year + '年&lt;em&gt;' + data.month + '月&lt;/em&gt;&lt;/h1&gt;\\ &lt;ul class=\"img-box-ul\"&gt;' + liTmpl + '&lt;/ul&gt;\\ &lt;/section&gt;'; &#125; document.querySelector('.instagram').innerHTML = '&lt;div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\"&gt;' + ulTmpl + '&lt;/div&gt;'; createVideoIncon(); _view2.default.init(); &#125;; 3.图片处理 我的博客相关文件: https://github.com/789-bob/Blog-Back-Up (1)裁剪图片 去图片的中间部分，裁剪为正方形 对应的裁剪函数 1234567891011121314151617181920def cut_by_ratio(self): \"\"\"按照图片长宽进行分割 ------------ 取中间的部分，裁剪成正方形 \"\"\" im = Image.open(self.infile) (x, y) = im.size if x &gt; y: region = (int(x/2-y/2), 0, int(x/2+y/2), y) #裁切图片 crop_img = im.crop(region) #保存裁切后的图片 crop_img.save(self.outfile) elif x &lt; y: region = (0, int(y/2-x/2), x, int(y/2+x/2)) #裁切图片 crop_img = im.crop(region) #保存裁切后的图片 crop_img.save(self.outfile) (2)压缩图片 把图片进行压缩，方便相册的加载 12345678910111213141516171819202122def compress(choose, des_dir, src_dir, file_list): \"\"\"压缩算法，img.thumbnail对图片进行压缩， 参数 ----------- choose: str 选择压缩的比例，有4个选项，越大压缩后的图片越小 \"\"\" if choose == '1': scale = SIZE_normal if choose == '2': scale = SIZE_small if choose == '3': scale = SIZE_more_small if choose == '4': scale = SIZE_more_small_small for infile in file_list: img = Image.open(src_dir+infile) # size_of_file = os.path.getsize(infile) w, h = img.size img.thumbnail((int(w/scale), int(h/scale))) img.save(des_dir + infile) 4.GitHub提交 5.json数据处理 实现代码: 123456789101112131415161718192021222324252627282930313233343536373839404142def handle_photo(): '''根据图片的文件名处理成需要的json格式的数据 ----------- 最后将data.json文件存到博客的source/photos文件夹下 ''' src_dir, des_dir = \"photos/\", \"min_photos/\" file_list = list_img_file(src_dir) list_info = [] file_list.sort(key=lambda x: x.split('_')[0]) # 按照日期排序 for i in range(len(file_list)): filename = file_list[i] date_str, info = filename.split(\"_\") info, _ = info.split(\".\") date = datetime.strptime(date_str, \"%Y-%m-%d\") year_month = date_str[0:7] if i == 0: # 处理第一个文件 new_dict = &#123;\"date\": year_month, \"arr\":&#123;'year': date.year, 'month': date.month, 'link': [filename], 'text': [info], 'type': ['image'] &#125; &#125; list_info.append(new_dict) elif year_month != list_info[-1]['date']: # 不是最后的一个日期，就新建一个dict new_dict = &#123;\"date\": year_month, \"arr\":&#123;'year': date.year, 'month': date.month, 'link': [filename], 'text': [info], 'type': ['image'] &#125; &#125; list_info.append(new_dict) else: # 同一个日期 list_info[-1]['arr']['link'].append(filename) list_info[-1]['arr']['text'].append(info) list_info[-1]['arr']['type'].append('image') list_info.reverse() # 翻转 final_dict = &#123;\"list\": list_info&#125; with open(\"D:/blog/source/photos/data.json\",\"w\") as fp: json.dump(final_dict, fp) 每次图片有改动都需要执行此脚本文件","pubDate":"Fri, 06 Sep 2019 11:10:59 GMT","guid":"//theone.org.cn/2019/09/06/2019-09-06-Hexo+Github实现相册功能/","category":"hexo"},{"title":"Hexo+Github搭建自己的博客","link":"//theone.org.cn/2019/09/05/2019-09-05-Hexo+Github搭建自己的博客/","description":"最终效果可以查看：http://theone.org.cn/ 一.环境搭建 安装NodeJS: http://nodejs.cn/download/ 需要配置环境变量 安装git工具: https://git-for-windows.github.io/ 注册github账号 配置SSH-key 创建名为userName.github.io的仓库,userName是你申请的用户名","pubDate":"Thu, 05 Sep 2019 10:20:29 GMT","guid":"//theone.org.cn/2019/09/05/2019-09-05-Hexo+Github搭建自己的博客/","category":"hexo"}]}